#include "UserType/TryUserTypeUtil.h"
#include <sol.hpp>
#include "{{ data.tt_head_file }}"

namespace TryUserType
{
    {{ data.tt_bind_fn }}
	{
		struct PBMsg 
		{
			static void DoLuaBind(lua_State *L, const std::string &name_space, const std::string &name)
			{
				assert(!name.empty());
				sol::state_view lua(L);
				sol::table ns_table = GetOrNewLuaNameSpaceTable(lua, name_space);
				{
					sol::optional<sol::object> opt_object = ns_table[name];
					assert(!opt_object);
				}
				ns_table.new_enum(name,
                {%- for field in data.fields %}
					"{{ field.tt_name }}", {{ data.tt_full_type }}::{{ field.tt_enum_name }}
					{%- if data.fields|last != field %}, {%- endif %}
                {%- endfor %}
				);
			}
		};
		
		PBMsg::DoLuaBind(L, "{{ data.tt_name_space }}", "{{ data.tt_type }}"); 
	}
}
 	